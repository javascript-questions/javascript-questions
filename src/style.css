html {
  color: #24292e;
	font: 14px/1.5 -apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;
	font-weight: 400;
}

body {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100%25' height='100%25' viewBox='0 0 1600 800'%3E%3Cg stroke='%23000' stroke-width='66.7' stroke-opacity='0.05' %3E%3Ccircle fill='%23ff9d00' cx='0' cy='0' r='1800'/%3E%3Ccircle fill='%23fb8d17' cx='0' cy='0' r='1700'/%3E%3Ccircle fill='%23f47d24' cx='0' cy='0' r='1600'/%3E%3Ccircle fill='%23ed6e2d' cx='0' cy='0' r='1500'/%3E%3Ccircle fill='%23e35f34' cx='0' cy='0' r='1400'/%3E%3Ccircle fill='%23d85239' cx='0' cy='0' r='1300'/%3E%3Ccircle fill='%23cc453e' cx='0' cy='0' r='1200'/%3E%3Ccircle fill='%23be3941' cx='0' cy='0' r='1100'/%3E%3Ccircle fill='%23b02f43' cx='0' cy='0' r='1000'/%3E%3Ccircle fill='%23a02644' cx='0' cy='0' r='900'/%3E%3Ccircle fill='%23901e44' cx='0' cy='0' r='800'/%3E%3Ccircle fill='%23801843' cx='0' cy='0' r='700'/%3E%3Ccircle fill='%236f1341' cx='0' cy='0' r='600'/%3E%3Ccircle fill='%235e0f3d' cx='0' cy='0' r='500'/%3E%3Ccircle fill='%234e0c38' cx='0' cy='0' r='400'/%3E%3Ccircle fill='%233e0933' cx='0' cy='0' r='300'/%3E%3Ccircle fill='%232e062c' cx='0' cy='0' r='200'/%3E%3Ccircle fill='%23210024' cx='0' cy='0' r='100'/%3E%3C/g%3E%3C/svg%3E");
  /* background by SVGBackgrounds.com */
  background-attachment: fixed;
  background-size: cover;
  margin: 0;
}

* {
  box-sizing: border-box;
}

a {
  color: #68153e;
}

ul, ol {
  padding-left: 0;
  margin-top: 0;
  margin-bottom: 0;
  list-style-position: inside;
}

code,
pre {
  font-family: SFMono-Regular,Consolas,Liberation Mono,Menlo,Courier,monospace;
}

code {
  background-color: rgba(27,31,35,.05);
  border-radius: 3px;
  font-size: 85%;
  margin: 0;
  padding: .2em .4em;
}

pre {
  background-color: #24292e;
  color: white;
  font-family: SFMono-Regular,Consolas,Liberation Mono,Menlo,Courier,monospace;
  font-size: 85%;
  line-height: 1.45;
  word-break: normal;
  overflow: auto;
  padding: 16px;
  margin-top: 0;
  margin-bottom: 0;
  -webkit-overflow-scrolling: touch;
}

[disabled] {
  pointer-events: none;
  opacity: 0.6;
  user-select: none;
}

.width-full {
  width: 100%;
}

.app-shell {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  margin-left: auto;
  margin-right: auto;
  max-width: 800px;
}

main {
  display: flex;
  flex-direction: column;
  flex: 1;
  padding: 16px 8px 56px 8px;
}

footer {
  display: flex;
  justify-content: space-between;
}

.Box {
  background-color: #fff;
  border: 1px solid #d1d5da;
  border-radius: 3px;
  box-shadow: 0 0 60px rgba(0, 0, 0, 0.4);
}

.Box-header {
  padding: 16px;
  margin: -1px -1px 0;
  background-color: #24292e;
  border-top-left-radius: 3px;
  border-top-right-radius: 3px;
}

.Box-row {
  background-color: #fff;
  padding: 16px;
  list-style-type: none;
  border-top: 1px solid #e1e4e8;
}

.Box-row--hover-gray:hover {
  background-color: #f6f8fa;
}

.Box-row[data-selected="true"] {
  background-color: #f6f8fa;
  box-shadow: 2px 0 0 #68153e inset;
}

.Intro,
.QuestionHeader {
  color: white;
}

.Intro {
  display: flex;
  flex-direction: column;
  align-items: center;
	justify-content: center;
  min-height: 100vh;
  padding: 80px 16px 16px 16px;
  margin-left: auto;
  margin-right: auto;
  max-width: 480px;
}

.Intro h1 {
  font-size: 2.2em;
  font-weight: 200;
  margin-top: 48px;
  margin-bottom: 8px;
  align-self: flex-start;
}

.Intro p {
  font-size: 1em;
  line-height: 1.4;
  margin-top: 0;
  margin-bottom: 48px;
}

.Intro p:last-of-type {
  font-size: 11px;
  text-align: center;
  margin-top: 56px;
  margin-bottom: 0;
}

.Intro a:not([class]) {
  color: white;
}

.QuestionHeader {
  padding: 32px 16px 8px 16px;
}

.QuestionHeader > h2 {
  font-size: 1.2em;
  font-weight: 500;
  margin-bottom: 0;
}

.Button {
	background-color: white;
	border: 0;
	border-radius: 3px;
	color: #1e0121;
  font-weight: 500;
  padding: 12px 40px;
  display: inline-block;
  text-align: center;
  text-decoration: none;
}
.Button:focus {
  box-shadow: rgba(255, 255, 255, 0.4) 0px 0px 0px 0.2em;
  outline: 0;
}

.Button--purple {
  color: #fff;
  background-color: #68153e;
}

.Button--purple:focus {
  box-shadow: rgba(104, 21, 62, 0.4) 0px 0px 0px 0.2em;
}

.Pagination {
  color: white;
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-top: auto;

  background-color: #68153e;
  box-shadow: 0 0 60px rgba(0, 0, 0, 0.4);
  padding: 0;
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
}

.Drawer {
  position: absolute;
  top: 8px;
  right: 8px;
  z-index: 1;
}

.Drawer > summary {
  border-radius: 50%;
  list-style: none;
}
.Drawer > summary::-webkit-details-marker {
  display: none;
}

/* Using a nested div to fix a flexbox issue on iOS */
.Drawer > summary > div {
  border-radius: 50%;
  box-shadow: 0 4px 11px rgba(0, 0, 0, .3);
  background-color: #68153e;
  color: white;
  cursor: pointer;
  width: 40px;
  height: 40px;
  padding: 0;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
}

.Drawer > summary:focus {
  box-shadow: rgba(104, 21, 62, 0.4) 0px 0px 0px 0.2em;
  outline: 0;
}

.Drawer[open] > summary::before {
  content: "";
  cursor: default;
  display: block;
  background: rgba(27,31,35,0.5);
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.Drawer summary::-webkit-details-marker {
  display: none;
}

.Drawer[open] > div {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  width: 40%;
  min-width: 280px;
  max-width: 340px;
  background-color: #ffffff;
  box-shadow: 3px 0 16px rgba(0, 0, 0, 0.4);
  animation: slideIn 225ms cubic-bezier(0.4, 0, 0.2, 1);
  will-change: transform;
  padding: 16px;
  display: flex;
  flex-direction: column;

  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
}

.Drawer p {
  margin-top: 0;
}

.Drawer h3 {
  margin-top: 0;
  margin-bottom: 1em;
}

@media (min-width: 800px) {
  main {
    padding-top: 90px;
    padding-bottom: 8px;
  }

  .Drawer {
    top: 16px;
    right: 16px;
  }

  .Drawer > summary > div {
    width: 56px;
    height: 56px;
  }

  .Intro {
    padding-bottom: 48px;
  }
  .Intro h1 {
    font-size: 3.4em;
  }
  .Intro p:last-of-type {
    font-size: inherit;
  }

  .QuestionHeader > h2 {
    font-size: 1.5em;
  }

  .Pagination {
    padding: 48px 0;
    position: initial;
    background: initial;
    box-shadow: initial;
  }
}

@keyframes slideIn {
  0% {
    transform: translateX(110%);
  }
  100% {
    transform: translateX(0);
  }
}
